package com.hotelmanagement.service;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.hotelmanagement.dao.BookingRepo;
import com.hotelmanagement.dao.UserRepo;
import com.hotelmanagement.model.BookingConfirmedDetailsDTO;
import com.hotelmanagement.model.BookingDetails;
import com.hotelmanagement.model.MailRequest;
import com.hotelmanagement.model.User;
import jakarta.mail.*;
import jakarta.mail.internet.InternetAddress;
import jakarta.mail.internet.MimeMessage;
import lombok.AccessLevel;
import lombok.Getter;
import lombok.Setter;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Service;

import java.util.Properties;

@Service
public class MailSenderService {

    @Autowired
    UserRepo userRepo;

    @Autowired
    BookingRepo bookingRepo;

    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    @JsonIgnore
    @Value("${mail.security.from}")
    private String from;

    @Getter(AccessLevel.NONE)
    @Setter(AccessLevel.NONE)
    @JsonIgnore
    @Value("${mail.security.password}")
    private String password;

    public void sendMail(BookingDetails details) {
        System.out.println("DETAILS : " + details);

        BookingConfirmedDetailsDTO bookedDetails = bookingRepo.findBookedDetailsForMailing(details.getBookingNumber());

        String subject = "Booking Confirmation in Hotel Grand";
        String message = "Hi " + bookedDetails.getUsername() + ",\n\nThis mail is to confirm your room booking in Hotel Grand, Kukatpalli, Hyderabad. "
                + "Please find the booking details below:\n\n" +
                "Booking Number : " + bookedDetails.getBookingNumber() +
                "\nGuest name : " + bookedDetails.getUsername() +
                "\nRoom Number : " + bookedDetails.getRoomNumber() +
                "\nNo of days staying : " + bookedDetails.getStayingDays() +
                "\nCheck-in date : " + bookedDetails.getCheckInDate() +
                "\nCheck-out date : " + bookedDetails.getCheckOutDate() +
                "\nBooking Status : " +  bookedDetails.getConfirmedStatus() +
                "\n\nHave a happy stay \uD83E\uDEF6"
                + "\n\n\nThis is an autogenerated mail, please do not reply. Please reach out to chethanprasadponduri@gmail.com for any queries";

        User user = userRepo.findById(details.getUserId().getId()).orElseThrow(() -> new RuntimeException("User not found"));
        String to = user.getName();

        MailRequest mailRequest = new MailRequest(subject, message, to);

        System.out.println(sendMail(mailRequest));
    }

    public String sendMail(MailRequest mailRequest) {

        System.out.println("Entered the mailSender method...");
        String host = "smtp.gmail.com";
        Properties prop = System.getProperties();
        prop.put("mail.smtp.host", host);
        prop.put("mail.smtp.port", "465");
        prop.put("mail.smtp.ssl.enable", "true");
        prop.put("mail.smtp.auth", "true");

        Session session = Session.getInstance(prop, new Authenticator() {
            @Override
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(from, password);
            }
        });

        MimeMessage mimeMessage = new MimeMessage(session);

        try {
            mimeMessage.setFrom(from);
            mimeMessage.addRecipient(Message.RecipientType.TO, new InternetAddress(mailRequest.getTo()));
            mimeMessage.setSubject(mailRequest.getSubject());
            mimeMessage.setText(mailRequest.getMessage());

            Transport.send(mimeMessage);
            return "Successfully sent the booking mail";
        } catch (Exception e) {
            e.printStackTrace();
            return "Failed to send mail";
        }
    }
}
